<krpano version="1.19" title="Nova Concepts">	<include url="skin/vtourskin.xml" />	<include url="plugins/showtext.xml" />	<!-- customize skin settings: maps, gyro, thumbnails, tooltips, layout, design, ... -->	<skin_settings maps="false"	               maps_type="bing"	               maps_bing_api_key=""	               maps_zoombuttons="false"	               gyro="true"	               littleplanetintro="false"	               title="true"				   hotbutton="true"				   waldobutton="true"	               thumbs="true"	               thumbs_width="120" thumbs_height="80" thumbs_padding="10" thumbs_crop="0|40|240|160"	               thumbs_opened="false"	               thumbs_text="true"	               thumbs_dragging="true"	               thumbs_onhoverscrolling="false"	               thumbs_scrollbuttons="false"	               thumbs_scrollindicator="false"	               thumbs_loop="true"	               tooltips_buttons="false"	               tooltips_thumbs="false"	               tooltips_hotspots="true"	               tooltips_mapspots="false"	               deeplinking="false"	               loadscene_flags="MERGE"	               loadscene_blend="OPENBLEND(0.5, 0.0, 0.75, 0.05, linear)"	               loadscene_blend_prev="SLIDEBLEND(0.5, 180, 0.75, linear)"	               loadscene_blend_next="SLIDEBLEND(0.5,   0, 0.75, linear)"	               loadingtext="loading..."	               layout_width="100%"	               layout_maxwidth.normal="900"	               layout_maxwidth.mobile=""	               controlbar_width.normal="-44"	               controlbar_width.mobile="100%"	               controlbar_height.normal="38"	               controlbar_height.mobile="34"	               controlbar_offset.normal="22"	               controlbar_offset.mobile="0"	               controlbar_offset_closed="-40"	               controlbar_overlap.normal="7"	               controlbar_overlap.mobile="2"	               design_skin_images="vtourskin.png"	               design_bgcolor="0xb05b5b"	               design_bgalpha="0.4"	               design_bgborder="1 0xb05b5b 1.0"	               design_bgroundedge.normal="10"	               design_bgroundedge.mobile="1"	               design_bgshadow="0 0 9 0xFFFFFF 0.8"	               design_thumbborder_bgborder="4 0xFFFFFF 1.0"	               design_thumbborder_padding="2"	               design_thumbborder_bgroundedge="5"	               design_text_css="color:#FFFFFF; font-family:Arial; font-weight:bold;"	               design_text_shadow="1"	               />				   	<action name="skin_nextscene_loop">		stoptween(hotspot[Waldo].scale);		add(newsceneindex, scene[get(xml.scene)].index, %1);		sub(lastsceneindex, scene.count, 1);		if(newsceneindex LT 0, copy(newsceneindex,lastsceneindex));		if(newsceneindex GT lastsceneindex, set(newsceneindex,0));		layer[skin_thumbs].scrolltocenter(get(scene[get(newsceneindex)].thumbx), get(scene[get(newsceneindex)].thumby));		loadscene(get(scene[get(newsceneindex)].name),null,MERGE|KEEPVIEW,get(skin_settings.loadscene_flags),calc(%1 LT 0 ? skin_settings.loadscene_blend_prev : skin_settings.loadscene_blend_next));		pin_status(0);		pin_status2(get(scene[get(newsceneindex)].name));	</action><textstyle name="DEFAULT"           origin="cursor"           edge="bottom"           xoffset="0"           yoffset="-3"           fadeintime="0.0"           showtime="0.1"           fadetime="0.0"           font="Baskerville"           fontsize="18px"           bold="true"           italic="false"           textcolor="0xFFFFFF"           textalign="none"           padding="1"           css=""           width=""           height=""           vcenter=""           background="false"           backgroundcolor="0xFFFFFF"           backgroundalpha="1.0"           border="false"           bordercolor="0x000000"           borderalpha="1.0"           borderwidth="1.0"           roundedge="0"           shadow="0.0"           shadowrange="4.0"           shadowangle="45"           shadowcolor="0x000000"           shadowalpha="1.0"           textshadow="1.0"           textshadowrange="4.0"           textshadowangle="45"           textshadowcolor="0x000000"           textshadowalpha="1.0"           embeddedfonts="false"           alpha="1.0"           blendmode="normal"           effect=""           noclip="true"           /><style 	name="skin_hotspotstyle"		url="skin/NOVA_Hotspot Circle.png"		edge="center"		devices="all"		tooltip=""		scalechildren="true"		maskchildren="false"		frame="1"		alpha="0.7"		visible="true"		zorder="40"		capture="true" 		distorted="false"		onclick="if(linkedscene, stoptween(hotspot[Waldo].scale); tween(scale,0.15,0.39); tween(oy,-20,0.39); tween(alpha,0,0.39); tween(view.fov,90,0.39,easeInOutSine); pin_status(0); pin_status2(get(linkedscene),null); delayedcall(0.4,set(events.onloadcomplete,null); loadscene(get(linkedscene),null,MERGE|KEEPVIEW,get(skin_settings.loadscene_blend)); skin_updatescroll();set(view.fov,105); tween(layer[skin_tooltip].alpha, 0.0, 0.1, default); set(layer[skin_tooltip].visible,false); stopall(); ););" 		onloaded=" if(linkedscene AND skin_settings.tooltips_hotspots, copy(tooltip,scene[get(linkedscene)].title); loadstyle(skin_tooltips); ); d_resize(); delayedcall(0.1,hotspot_phase2(););"		/>			<style name="skin_tooltips"	       onover.mouse="copy(layer[skin_tooltip].html, tooltip);	                     set(layer[skin_tooltip].visible, true);	                     tween(layer[skin_tooltip].alpha, 1.0, 0.1);	                     asyncloop(hovering, copy(layer[skin_tooltip].x,mouse.stagex); copy(layer[skin_tooltip].y,mouse.stagey); );"	       onout.mouse="tween(layer[skin_tooltip].alpha, 0.0, 0.1, default); set(layer[skin_tooltip].visible,false);"	       />		   	<action name="hotspot_phase2">		txtadd(temp_outer,'HOVR_Outer_',get(name),'z');		txtadd(temp_arrows,'HOVR_Arrows_',get(name));		txtadd(temp_circle,'HOVR_Circle_',get(name));		txtadd(temp_parent,'hotspot[',get(name),']');		txtadd(temp_align,'hotspot[',get(name),'].center');		addlayer(get(temp_outer));		set(layer[get(temp_outer)].url,skin/NOVA_Hotspot Outer.png);		set(layer[get(temp_outer)].parent,get(temp_parent));		set(layer[get(temp_outer)].enabled,false);		set(layer[get(temp_outer)].keep,false);		set(layer[get(temp_outer)].align,get(temp_align));		set(layer[get(temp_outer)].scale_check,2);		set(layer[get(temp_outer)].scale,1);		set(layer[get(temp_outer)].frame,359);		set(layer[get(temp_outer)].zorder,39);		set(layer[get(temp_outer)].distorted,false);		set(layer[get(temp_outer)].onloaded,hotspot_animate2(););		set(layer[get(temp_outer)].visible,true);				addlayer(get(temp_arrows));		set(layer[get(temp_arrows)].url,skin/NOVA_Hotspot Arrows.png);		set(layer[get(temp_arrows)].parent,get(temp_parent));		set(layer[get(temp_arrows)].enabled,false);		set(layer[get(temp_arrows)].keep,false);		set(layer[get(temp_arrows)].align,get(temp_align));		set(layer[get(temp_arrows)].frame,359);		set(layer[get(temp_arrows)].zorder,39);		set(layer[get(temp_arrows)].distorted,false);		set(layer[get(temp_arrows)].onloaded,hotspot_outer(););		set(layer[get(temp_arrows)].visible,true);				addlayer(get(temp_circle));		set(layer[get(temp_circle)].url,skin/NOVA_Hotspot.png);		set(layer[get(temp_circle)].parent,get(temp_parent));		set(layer[get(temp_circle)].enabled,false);		set(layer[get(temp_circle)].keep,false);		set(layer[get(temp_circle)].frame,359);		set(layer[get(temp_circle)].align,get(temp_align));		set(layer[get(temp_circle)].zorder,39);		set(layer[get(temp_circle)].distorted,false);		set(layer[get(temp_circle)].onloaded,hotspot_animate(););		set(layer[get(temp_circle)].visible,true);	</action>	<action name="hotspot_animate">		dec(frame,1,0,359);		set(rotate,get(frame));		delayedcall(0.02, hotspot_animate() );    <!-- here you set the speed of the frame change -->	</action>		<action name="hotspot_animate2">		inc(frame,1,359,0);		set(rotate,get(frame));		if(scale_check GT 1,			set(scale_check,0);			if(scale GT 1.1,				tween(scale, 1.0, 1.0);				delayedcall(1.0, set(scale_check,2));			,				tween(scale, 1.22, 1.0);				delayedcall(1.0, set(scale_check,2));			);		);		delayedcall(0.02, hotspot_animate2() );    <!-- here you set the speed of the frame change -->	</action>		<action name="hotspot_outer">		inc(frame,1,359,0);		set(rotate,get(frame));		delayedcall(0.02, hotspot_outer() );    <!-- here you set the speed of the frame change -->	</action><control usercontrol="all"         mousetype="drag2d"         touchtype="drag2d"         zoomtocursor="false"         zoomoutcursor="true"         mouseaccelerate="1.0"         mousespeed="8.0"         mousefriction="0.8"         mouseyfriction="1.0"         mousefovchange="1.0"         keybaccelerate="0.2"         keybspeed="1.5"         keybfriction="0.9"         keybfovchange="0.75"         keybinvert="false"         fovspeed="1.0"         fovfriction="0.9"         movetocursor="none"         cursorsize="10.0"         headswing="0.0"         camrollreset="true"         keycodesleft="37"         keycodesright="39"         keycodesup="38"         keycodesdown="40"         keycodesin=""         keycodesout=""         bouncinglimits="false"         touchfriction="0.87"         touchzoom="true"         /><style name="embedskin"       type="image"       alturl=""       keep="false"       devices="all"       parent=""       visible="false"       enabled="true"       handcursor="true"       maskchildren="false"       scalechildren="false"       zorder="10"       align="center"       edge=""       rotate="0.0"       width=""       height=""       scale="1.0"       alpha="1.0"       crop=""       onovercrop=""       ondowncrop=""       bgcolor="0x000000"       bgalpha="0.0"       bgborder="0"       bgroundedge="0"       bgshadow=""       bgcapture="false"       onloaded=""       /><style name="custom_hotspot"		keep="false"		visible="true"		enabled="true"		handcursor="true"		capture="false"		alpha="1.0"		fillcolor="0xFFFFFF"		fillalpha="0.0"		borderwidth="3.0"	         	bordercolor="0xFFFFFF"		borderalpha="0.0"         		onover="tween(fillalpha,0.45);tween(borderalpha,1.0);"         		onout="tween(fillalpha,0);tween(borderalpha,0);"         		onloaded=""		/><events onresize="d_resize();" /><action name="d_resize">	if(device.desktop,		if(stagewidth LT 1200, 			set(layer[NOVA Logo Desktop].scale,0.10);			,			set(layer[NOVA Logo Desktop].scale,0.15);			);  		if(stagewidth LT 1090,			set(layer[NOVA Logo Desktop].y,60); 			,			set(layer[NOVA Logo Desktop].y,15);			); 	);	div(screenaspect, stagewidth, stageheight);	div(imageaspect_we, layer[foundwaldo].imagewidth, layer[foundwaldo].imageheight);	if(imageaspect_we GT screenaspect,		set(layer[foundwaldo].width,85%); set(layer[foundwaldo].height,prop);		set(layer[alreadyfound].width,85%); set(layer[alreadyfound].height,prop);		,		set(layer[foundwaldo].width,prop); set(layer[foundwaldo].height,55%);		set(layer[alreadyfound].width,prop); set(layer[alreadyfound].height,55%);	);		if(screenaspect LE 1,		set(layer[NOVA_Map].width,85%); set(layer[NOVA_Map].height,prop);		,		set(layer[NOVA_Map].width,prop); set(layer[NOVA_Map].height,85%);	);		div(imageaspect_load, layer[loadingHoVR].imagewidth, layer[loadingHoVR].imageheight);		if(imageaspect_load GT screenaspect,			set(layer[loadingHoVR].width,80%); set(layer[loadingHoVR].height,prop);		,			set(layer[loadingHoVR].width,prop); set(layer[loadingHoVR].height,75%);		);			div(menu_aspect, layer[Waldo_Menu_Back].imagewidth, layer[Waldo_Menu_Back].imageheight);		if(menu_aspect GT screenaspect,			set(layer[Waldo_Menu_Back].width,70%); set(layer[Waldo_Menu_Back].height,prop);		,			set(layer[Waldo_Menu_Back].width,prop); set(layer[Waldo_Menu_Back].height,65%);		);				if(screenaspect GT 1,			if(hotspot[spot0],set(hotspot[spot0].height,9%); set(hotspot[spot0].width,prop););			if(hotspot[spot1],set(hotspot[spot1].height,9%); set(hotspot[spot1].width,prop););			if(hotspot[spot2],set(hotspot[spot2].height,9%); set(hotspot[spot2].width,prop););			if(hotspot[spot3],set(hotspot[spot3].height,9%); set(hotspot[spot3].width,prop););			if(hotspot[spot4],set(hotspot[spot4].height,9%); set(hotspot[spot4].width,prop););			if(hotspot[spot5],set(hotspot[spot5].height,9%); set(hotspot[spot5].width,prop););			if(hotspot[spot6],set(hotspot[spot6].height,9%); set(hotspot[spot6].width,prop););			if(hotspot[spot7],set(hotspot[spot7].height,9%); set(hotspot[spot7].width,prop););			if(hotspot[spot8],set(hotspot[spot8].height,9%); set(hotspot[spot8].width,prop););			if(hotspot[spot9],set(hotspot[spot9].height,9%); set(hotspot[spot9].width,prop););			if(hotspot[spot10],set(hotspot[spot10].height,9%); set(hotspot[spot10].width,prop););			if(hotspot[spot11],set(hotspot[spot11].height,9%); set(hotspot[spot11].width,prop););			if(hotspot[spot12],set(hotspot[spot12].height,9%); set(hotspot[spot12].width,prop););			if(hotspot[spot13],set(hotspot[spot13].height,9%); set(hotspot[spot13].width,prop););			if(hotspot[spot14],set(hotspot[spot14].height,9%); set(hotspot[spot14].width,prop););			if(hotspot[spot15],set(hotspot[spot15].height,9%); set(hotspot[spot15].width,prop););			if(hotspot[spot16],set(hotspot[spot16].height,9%); set(hotspot[spot16].width,prop););		,			if(hotspot[spot0],set(hotspot[spot0].width,9%); set(hotspot[spot0].height,prop););			if(hotspot[spot1],set(hotspot[spot1].width,9%); set(hotspot[spot1].height,prop););			if(hotspot[spot2],set(hotspot[spot2].width,9%); set(hotspot[spot2].height,prop););			if(hotspot[spot3],set(hotspot[spot3].width,9%); set(hotspot[spot3].height,prop););			if(hotspot[spot4],set(hotspot[spot4].width,9%); set(hotspot[spot4].height,prop););			if(hotspot[spot5],set(hotspot[spot5].width,9%); set(hotspot[spot5].height,prop););			if(hotspot[spot6],set(hotspot[spot6].width,9%); set(hotspot[spot6].height,prop););			if(hotspot[spot7],set(hotspot[spot7].width,9%); set(hotspot[spot7].height,prop););			if(hotspot[spot8],set(hotspot[spot8].width,9%); set(hotspot[spot8].height,prop););			if(hotspot[spot9],set(hotspot[spot9].width,9%); set(hotspot[spot9].height,prop););			if(hotspot[spot10],set(hotspot[spot10].width,9%); set(hotspot[spot10].height,prop););			if(hotspot[spot11],set(hotspot[spot11].width,9%); set(hotspot[spot11].height,prop););			if(hotspot[spot12],set(hotspot[spot12].width,9%); set(hotspot[spot12].height,prop););			if(hotspot[spot13],set(hotspot[spot13].width,9%); set(hotspot[spot13].height,prop););			if(hotspot[spot14],set(hotspot[spot14].width,9%); set(hotspot[spot14].height,prop););			if(hotspot[spot15],set(hotspot[spot15].width,9%); set(hotspot[spot15].height,prop););			if(hotspot[spot16],set(hotspot[spot16].width,9%); set(hotspot[spot16].height,prop););		);</action><layer name="loadingHoVRBG"	type="image"	url="Ref/white1px.jpg"	scalechildren="false"	maskchildren="false"	keep="true"	width="100%"	height="100%"	alpha="1.0"	visible="true"	zorder="97"	handcursor="false"	enabled="true"	edge="topleft"	align="topleft"/><layer name="loadingHoVR"	url="Ref/HoVRLoadingBack.jpg"	parent="layer[loadingHoVRBG]"	visible="true"	scalechildren="true"	maskchildren="true"	keep="true"	alpha="1.0"	zorder="98"	align="center"	enabled="false"	handcursor="false"	x=""	y=""	onclick=""	onloaded="d_resize();"/><layer name="loadingHoVRani"	url="skin/NOVA_Hotspot Circle.png"	parent="layer[loadingHoVR]"	scalechildren="true"	scale=".60"	visible="true"	keep="true"	alpha="1.0"	enabled="false"	handcursor="false"	y=""	x="440"	zorder="99"	edge="center"	align="center"/><layer name="loadingHoVRani2"	url="skin/NOVA_Hotspot Outer.png"	parent="layer[loadingHoVRani]"	scalechildren="true"	visible="true"	keep="true"	alpha="1.0"	enabled="false"	handcursor="false"	frame="0"	zorder="99"	edge="center"	align="center"	onloaded="hotspot_outer();"/><layer name="loadingHoVRani3"	url="skin/NOVA_Hotspot Arrows.png"	parent="layer[loadingHoVRani]"	visible="true"	keep="true"	alpha="1.0"	enabled="false"	handcursor="false"	frame="0"	zorder="99"	edge="center"	align="center"	onloaded="hotspot_outer();"/><layer name="loadingHoVRani4"	url="skin/NOVA_Hotspot.png"	parent="layer[loadingHoVRani]"	visible="true"	keep="true"	alpha="1.0"	enabled="false"	handcursor="false"	zorder="99"	frame="0"	edge="center"	align="center"	onloaded="hotspot_animate();"/><layer name="NOVA Logo Desktop"       type="image"       url="https://s3.amazonaws.com/nova-logos/adventure-logo.png"       keep="true"       devices="desktop"       parent=""       visible="true"       enabled="true"       handcursor="true"       maskchildren="false"       scalechildren="false"	   capture="false"       zorder="10"       style=""       align="topleft"       edge="topleft"       x="15"       y=""       rotate="0.0"       width=""       height=""       scale=""       alpha="0.85"       crop=""       onovercrop=""       ondowncrop=""       bgcolor="0x000000"       bgalpha="0.0"       bgborder="0"       bgroundedge="0"       bgshadow=""       bgcapture="false"       onover=""       onhover="showtext(' HoVR by NOVA Concepts ')"       onout=""       onclick="openurl(http://www.conceptsbyNOVA.com,_blank);"       ondown=""       onup=""       onloaded="d_resize();"       /><layer name="NOVA Logo Desktop"       type="image"       url="https://s3.amazonaws.com/nova-logos/adventure-logo.png"       keep="true"       devices="mobile"       parent=""       visible="true"       enabled="true"       handcursor="true"       maskchildren="false"       scalechildren="false"	   capture="false"       zorder="10"       style=""       align="topleft"       edge="topleft"       x="10"       y="10"       rotate="0.0"       width=""       height=""       scale="0.1"       alpha="0.85"       crop=""       onovercrop=""       ondowncrop=""       bgcolor="0x000000"       bgalpha="0.0"       bgborder="0"       bgroundedge="0"       bgshadow=""       bgcapture="false"       onover=""       onhover="showtext(' HoVR by NOVA Concepts ')"       onout=""       onclick="openurl(http://www.conceptsbyNOVA.com,_blank);"       ondown=""       onup=""       onloaded=""       /><layer name="NOVA Logo Desktop"       type="image"       url="https://s3.amazonaws.com/nova-logos/adventure-logo.png"       keep="true"       devices="tablet"       parent=""       visible="true"       enabled="true"       handcursor="true"       maskchildren="false"       scalechildren="false"	   capture="false"       zorder="10"       style=""       align="topleft"       edge="topleft"       x="10"       y="10"       rotate="0.0"       width=""       height=""       scale="0.1"       alpha="0.85"       crop=""       onovercrop=""       ondowncrop=""       bgcolor="0x000000"       bgalpha="0.0"       bgborder="0"       bgroundedge="0"       bgshadow=""       bgcapture="false"       onover=""       onhover="showtext(' HoVR by NOVA Concepts ')"       onout=""       onclick="openurl(http://www.conceptsbyNOVA.com,_blank);"       ondown=""       onup=""       onloaded=""       />	   <!-- Menu -->	   	<layer name="Waldo_Menu_Full_Back"		type="container"		keep="true"		width="100%"		height="100%"		bgalpha="1.0"		bgcolor="0x000000"		bgcapture="true"		visible="true"		zorder="70"		handcursor="false"		align="center"		onclick=""	/>		<layer name="Waldo_Menu_Back"		url="Waldo/waldo-menu_back.png"		keep="true"		visible="true"		enabled="true"		handcursor="false"		maskchildren="false"		scalechildren="true"		capture="true"		zorder="71"		align="center"		edge="center"		alpha="1.0"		onloaded="d_resize();"	/>	<!-- Difficulty -->	<action name="difficulty">		if(%1 == 1,			set(layer[waldo_designator].difficulty,7.0);		);		if(%1 == 2,			set(layer[waldo_designator].difficulty,4.0);		);		if(%1 == 3,			set(layer[waldo_designator].difficulty,1.0);		);		set(layer[Waldo_Menu_Difficulty].visible,false);		set(layer[Waldo_Easy].visible,false);		set(layer[Waldo_Normal].visible,false);		set(layer[Waldo_Hard].visible,false);		set(layer[Waldo_Instructions_Opt].visible,true);		set(layer[Waldo_Close_Opt].visible,true);		tween(layer[Waldo_Menu_Full_Back].bgalpha,0.3,2.0);		if(startscene === null OR !scene[get(startscene)], set(startscene,scene_122nd_and_Broadway); );			loadscene(get(startscene), null, MERGE);			if(startactions !== null, startactions() );	</action>	<layer name="Waldo_Menu_Difficulty"		url="Waldo/select_difficulty.png"		keep="true"		parent="layer[Waldo_Menu_Back]"		visible="true"		enabled="true"		handcursor="false"		maskchildren="false"		scalechildren="true"		capture="true"		zorder="72"		align="center"		edge="center"		scale="1.0"		alpha="1.0"		onloaded=""	/>		<layer name="Waldo_Easy"		url="Waldo/easy.jpg"		keep="true"		parent="layer[Waldo_Menu_Back]"		visible="true"		enabled="true"		handcursor="true"		maskchildren="false"		scalechildren="true"		capture="true"		zorder="73"		align="center"		edge="center"		y="161"		x="-443"		scale="1.0"		alpha="1.0"		crop="0|0|403|115"		ondowncrop="0|115|403|115"		onclick="difficulty(1);"	/>		<layer name="Waldo_Normal"		url="Waldo/normal.jpg"		keep="true"		parent="layer[Waldo_Menu_Back]"		visible="true"		enabled="true"		handcursor="true"		maskchildren="false"		scalechildren="true"		capture="true"		zorder="73"		align="center"		edge="center"		y="161"		scale="1.0"		alpha="1.0"		crop="0|0|403|115"		ondowncrop="0|115|403|115"		onclick="difficulty(2);"	/>		<layer name="Waldo_Hard"		url="Waldo/hard.jpg"		keep="true"		parent="layer[Waldo_Menu_Back]"		visible="true"		enabled="true"		handcursor="true"		maskchildren="false"		scalechildren="true"		capture="true"		zorder="73"		align="center"		edge="center"		y="161"		x="443"		scale="1.0"		alpha="1.0"		crop="0|0|403|115"		ondowncrop="0|115|403|115"		onclick="difficulty(3);"	/>	<!-- Instructions or Close -->		<action name="close_menu">		if(%1 == 1,			set(layer[Waldo_Instructions_Opt].visibility,false);			set(layer[Waldo_Close_Opt].visibility,false);		);		set(layer[Waldo_Menu_Full_Back].visible,false);		set(layer[Waldo_Menu_Back].visible,false);	</action>		<layer name="Waldo_Instructions_Opt"		url="Waldo/instructions.jpg"		keep="true"		parent="layer[Waldo_Menu_Back]"		visible="false"		enabled="true"		handcursor="true"		maskchildren="false"		scalechildren="true"		capture="true"		zorder="73"		align="center"		edge="center"		y="40"		x="0"		scale="1.0"		alpha="1.0"		crop="0|0|650|115"		ondowncrop="0|115|650|115"		onclick="close_menu(1);"	/>		<layer name="Waldo_Close_Opt"		url="Waldo/close.jpg"		keep="true"		parent="layer[Waldo_Menu_Back]"		visible="false"		enabled="true"		handcursor="true"		maskchildren="false"		scalechildren="true"		capture="true"		zorder="73"		align="center"		edge="center"		y="200"		x="0"		scale="1.0"		alpha="1.0"		crop="0|0|650|115"		ondowncrop="0|115|650|115"		onclick="close_menu(1);"	/>	   <!-- MAP -->	<layer name="NOVA_Map_Back"		type="container"		keep="true"		width="100%"		height="100%"		bgalpha="0.4"		bgcolor="0x000000"		bgcapture="true"		visible="false"		handcursor="false"		align="center"		onclick="set(visible,false); set(layer[NOVA_Map].visible,false);"	/>	<layer name="NOVA_Map"		url="Map/HoVR Map.png"		keep="true"		visible="false"		enabled="true"		handcursor="false"		maskchildren="false"		scalechildren="true"		capture="true"		zorder="60"		align="center"		edge="center"		alpha="1.0"		onloaded="d_resize();"	/>			<!-- Create Pins -->	<action name="create_pins">		if(scene[%1].lat != null,			if(scene[%1].map_pin == true,				set(pin_name,get(scene[%1].name));				txtadd(temp_pin,'pin_',get(pin_name));				txtadd(temp_pinls,'',get(pin_name),'');				txtadd(pin_on,'tween(scale,0.4); tween(alpha,1.0); copy(layer[skin_tooltip].html, tooltip);',' set(layer[skin_tooltip].zorder,63); set(layer[skin_tooltip].visible, true); tween(layer[skin_tooltip].alpha, 1.0, 0.1); asyncloop(hovering, copy(layer[skin_tooltip].x,mouse.stagex); copy(layer[skin_tooltip].y,mouse.stagey); );');					txtadd(pin_out,'tween(scale,0.2);tween(alpha,0.8); tween(layer[skin_tooltip].alpha, 0.0, 0.1, default); set(layer[skin_tooltip].visible,false); copy(layer[skin_tooltip].x,mouse.stagex); set(layer[skin_tooltip].zorder, 20);',' copy(layer[skin_tooltip].y,mouse.stagey);' );				copy(temp_pinx,scene[%1].lng);				roundval(temp_pinx,6);				add(temp_pinx,73.658558);				mul(temp_pinx,-2935.8283);				copy(temp_piny,scene[%1].lat);				roundval(temp_piny,6);				sub(temp_piny,40.474520);				mul(temp_piny,3829.36847);								addlayer(get(temp_pin));				set(layer[get(temp_pin)].url,Map/pin.png);				set(layer[get(temp_pin)].parent,layer[NOVA_Map]);				set(layer[get(temp_pin)].keep,true);				set(layer[get(temp_pin)].scalechildren,true);				set(layer[get(temp_pin)].scale,0.2);				set(layer[get(temp_pin)].alpha,0.8);				set(layer[get(temp_pin)].edge,center);				set(layer[get(temp_pin)].align,bottomright);				set(layer[get(temp_pin)].x,get(temp_pinx));				set(layer[get(temp_pin)].y,get(temp_piny));				set(layer[get(temp_pin)].linkedscene,get(temp_pinls));				set(layer[get(temp_pin)].onover,get(pin_on));				set(layer[get(temp_pin)].onout,get(pin_out));				copy(layer[get(temp_pin)].tooltip,scene[%1].title);				set(layer[get(temp_pin)].onclick,if(linkedscene, tween(view.fov,90,0.39,easeInOutSine); delayedcall(0.4,set(events.onloadcomplete,null); loadscene(get(linkedscene),null,MERGE|KEEPVIEW,get(skin_settings.loadscene_blend)); skin_updatescroll();set(view.fov,105); tween(layer[skin_tooltip].alpha, 0.0, 0.1, default); set(layer[skin_tooltip].visible,false); stopall(); );); switch(layer[NOVA_Map].visible); switch(layer[NOVA_Map_Back].visible); pin_status(0); pin_status2(get(linkedscene)); );			);							inc(pin_num,1);			delayedcall(0,create_pins(get(pin_num)););		);	</action>			<action name="create_here">			set(pin_name2,get(scene[0].name));			txtadd(temp_pin2,'pin_',get(pin_name2));			addlayer(here);			set(layer[here].url,Map/here.png);			set(layer[here].parent,layer[NOVA_Map]);			set(layer[here].keep,true);			set(layer[here].visible,true);			set(layer[here].scale,1.0);			set(layer[here].enabled,false);			set(layer[here].align,bottom);			set(layer[here].edge,bottom);		</action>	<action name="pin_status">		set(pin_num2,%1);		if(scene[%1].lat != null,			if(scene[%1].map_pin == true,				set(pin_name,get(scene[%1].name));				txtadd(temp_pin,'pin_',get(pin_name));				txtadd(pin_on,'tween(scale,0.4); tween(alpha,1.0); copy(layer[skin_tooltip].html, tooltip);',' set(layer[skin_tooltip].zorder,63); set(layer[skin_tooltip].visible, true); tween(layer[skin_tooltip].alpha, 1.0, 0.1); asyncloop(hovering, copy(layer[skin_tooltip].x,mouse.stagex); copy(layer[skin_tooltip].y,mouse.stagey); );');					txtadd(pin_out,'tween(scale,0.2);tween(alpha,0.8); tween(layer[skin_tooltip].alpha, 0.0, 0.1, default); set(layer[skin_tooltip].visible,false); copy(layer[skin_tooltip].x,mouse.stagex); set(layer[skin_tooltip].zorder, 20);',' copy(layer[skin_tooltip].y,mouse.stagey); );');				set(layer[get(temp_pin)].enabled,true);				set(layer[get(temp_pin)].handcursor,true);				set(layer[get(temp_pin)].onover,get(pin_on));				set(layer[get(temp_pin)].onout,get(pin_out));			);			inc(pin_num2,1);			delayedcall(0,pin_status(get(pin_num2)););		);	</action>		<action name="pin_status2">		set(layer[here].visible,false);		delayedcall(0.1,			if(scene[%1].map_pin == true,				txtadd(temp_pin2,'pin_',%1,'');				txtadd(temp_pin3,'layer[pin_',%1,']');				set(layer[get(temp_pin2)].enabled,false);				set(layer[get(temp_pin2)].handcursor,false);				set(layer[get(temp_pin2)].onover,null);				set(layer[get(temp_pin2)].onout,null);								set(layer[here].parent,get(temp_pin3));				set(layer[here].visible,true);			);		);	</action>			<!-- Waldo Stuff -->		<layer name="waldo_designator"		keep="true"		scene122nd="none"		scene122ndfound="0"		scene77th="none"		scene77thfound="0"		scene66th="none"		scene66thfound="0"		scene51st="none"		scene51stfound="0"		sceneMorton="none"		sceneMortonfound="0"		sceneJohn="none"		sceneJohnfound="0"		sceneDutch="none"		sceneDutchfound="0"		scene14th="none"		scene14thfound="0"		sceneFleet="none"		sceneFleetfound="0"		sceneEast="none"		sceneEastfound="0"		difficulty="1"	/>		<layer name="foundwaldo_back"		type="container"		keep="true"		zorder="50"		width="100%"		height="100%"		bgalpha="0.0"		bgcolor="0x000000"		bgcapture="true"		visible="false"		handcursor="false"		align="center"		onclick="foundwaldo_close();"	/>	<layer name="foundwaldo"		url="Waldo/foundwaldo.jpg"		visible="false"		zorder="51"		scalechildren="true"		maskchildren="true"		keep="true"		alpha="0.0"		align="center"		enabled="true"		handcursor="true"		x=""		y=""		onclick="foundwaldo_close();"		onloaded="d_resize();"	/>		<layer name="foundwaldo_bottom"		url="Waldo/foundwaldo_bottom.jpg"		visible="true"		zorder="53"		parent="layer[foundwaldo]"		keep="true"		scale="1.0"		alpha="1.0"		edge="bottom"		align="bottom"		handcursor="false"		enabled="false"	/>		<layer name="foundwaldo_fig"		url="Waldo/waldo_fig1.jpg"		visible="true"		parent="layer[foundwaldo]"		keep="true"		zorder="52"		scale="1.0"		alpha="1.0"		edge="bottomright"		align="bottomright"		handcursor="false"		enabled="false"		x="42"		y="42"	/>		<layer name="foundwaldo_num"		visible="true"		parent="layer[foundwaldo]"		keep="true"		scale="1.0"		zorder="52"		alpha="1.0"		edge="topleft"		align="topleft"		handcursor="false"		enabled="false"		x="282"		y="279"	/>	<layer name="alreadyfound_back"		type="container"		keep="true"		zorder="50"		width="100%"		height="100%"		bgalpha="0.0"		bgcolor="0x000000"		bgcapture="true"		visible="false"		handcursor="false"		align="center"		onclick="alreadyfound_close();"	/>	<layer name="alreadyfound"		url="Waldo/alreadyfound.jpg"		visible="false"		zorder="51"		scalechildren="true"		maskchildren="true"		keep="true"		alpha="0.0"		align="center"		enabled="true"		handcursor="true"		x=""		y=""		onclick="alreadyfound_close();"		onloaded="d_resize();"	/>		<layer name="alreadyfound_bottom"		url="Waldo/foundwaldo_bottom.jpg"		visible="true"		zorder="53"		parent="layer[alreadyfound]"		keep="true"		scale="1.0"		alpha="1.0"		edge="bottom"		align="bottom"		handcursor="false"		enabled="false"	/>		<layer name="alreadyfound_fig"		url="Waldo/waldo_fig1.jpg"		visible="true"		parent="layer[alreadyfound]"		keep="true"		zorder="52"		scale="1.0"		alpha="1.0"		edge="bottomright"		align="bottomright"		handcursor="false"		enabled="false"		x="42"		y="42"	/>		<layer name="alreadyfound_num"		visible="true"		parent="layer[alreadyfound]"		keep="true"		scale="1.0"		zorder="52"		alpha="1.0"		edge="topleft"		align="topleft"		handcursor="false"		enabled="false"		x="282"		y="279"	/>		<action name="ifoundwaldo">		if(hotspot[waldo].found == 1;			if(howmanywaldos == 0,				set(layer[congrats_back].visible,true);				tween(layer[congrats_back].bgalpha,0.4,0.4);				set(layer[congrats].visible,true);				tween(layer[congrats].alpha,1.0,0.4);			,				set(layer[alreadyfound_back].visible,true);				tween(layer[alreadyfound_back].bgalpha,0.4,0.4);				set(layer[alreadyfound].visible,true);				tween(layer[alreadyfound].alpha,1.0,0.4);			);		,			set(hotspoy[waldo].found,1);			dec(howmanywaldos,1);			if(howmanywaldos == 0,				set(layer[congrats_back].visible,true);				tween(layer[congrats_back].bgalpha,0.5,0.4);				set(layer[congrats].visible,true);				tween(layer[congrats].alpha,1.0,0.4);			,				updatenumwaldos();				set(layer[foundwaldo_back].visible,true);				tween(layer[foundwaldo_back].bgalpha,0.4,0.4);				set(layer[foundwaldo].visible,true);				tween(layer[foundwaldo].alpha,1.0,0.4);			);			updatewaldoscenestatus();		);	</action>		<action name="ifoundwaldo">		if(hotspot[waldo].found == 1,			if(howmanywaldos == 0,				set(layer[congrats_back].visible,true);				tween(layer[congrats_back].bgalpha,0.4,0.4);				set(layer[congrats].visible,true);				tween(layer[congrats].alpha,1.0,0.4);			,				set(layer[alreadyfound_back].visible,true);				tween(layer[alreadyfound_back].bgalpha,0.4,0.4);				set(layer[alreadyfound].visible,true);				tween(layer[alreadyfound].alpha,1.0,0.4);			);		,			set(hotspot[waldo].found,1);			dec(howmanywaldos,1);			if(howmanywaldos == 0,				set(layer[congrats_back].visible,true);				tween(layer[congrats_back].bgalpha,0.4,0.4);				set(layer[congrats].visible,true);				tween(layer[congrats].alpha,1.0,0.4);			,				updatenumwaldos();				set(layer[foundwaldo_back].visible,true);				tween(layer[foundwaldo_back].bgalpha,0.4,0.4);				set(layer[foundwaldo].visible,true);				tween(layer[foundwaldo].alpha,1.0,0.4);			);			updatewaldoscenestatus();			what_does_waldo_do();		);		copy(cur_x,view.hlookat);		copy(cur_y,view.vlookat);		lookto(get(cur_x),get(cur_y),105,smooth(60,-60,90));	</action>		<action name="updatenumwaldos">		txtadd(layer[alreadyfound_num].url,'Waldo/num/',get(howmanywaldos),'_left.jpg');		txtadd(layer[foundwaldo_num].url,'Waldo/num/',get(howmanywaldos),'_left.jpg');	</action>		<action name="updatewaldoscenestatus">		if(hotspot[waldo].found == 1,			set(layer[skin_waldo_btn].crop,0|64|64|64);		,			set(layer[skin_waldo_btn].crop,0|0|64|64);		);		set(layer[skin_waldo_btn].alpha,1.0);		set(layer[skin_waldo_btn].enabled,true);	</action>	<action name="waldo_hint">		if(hotspot[waldo].found == 1,			if(howmanywaldos == 0,				set(layer[congrats_back].visible,true);				tween(layer[congrats_back].bgalpha,0.4,0.4);				set(layer[congrats].visible,true);				tween(layer[congrats].alpha,1.0,0.4);			,				set(layer[alreadyfound_back].visible,true);				tween(layer[alreadyfound_back].bgalpha,0.4,0.4);				set(layer[alreadyfound].visible,true);				tween(layer[alreadyfound].alpha,1.0,0.4);			);		,			copy(toh,hotspot[waldo].ath);			copy(tov,hotspot[waldo].atv);			lookto(get(toh),get(tov),get(view.fov),smooth(60,-60,90),true,true);			delayedcall(0.8,stoplookto(););			disable_hint();		);	</action>		<action name="disable_hint">		set(layer[skin_waldo_btn].enabled,false);		set(layer[skin_waldo_btn].alpha,0.4);		delayedcall(30.0,			set(layer[skin_waldo_btn].enabled,true);			set(layer[skin_waldo_btn].alpha,1.0);		);	</action>		<action name="alreadyfound_close">		tween(layer[alreadyfound].alpha,0.0,0.4);				tween(layer[alreadyfound_back].bgalpha,0.0,0.4);		delayedcall(0.4,			set(layer[alreadyfound].visible,false);			set(layer[alreadyfound_back].visible,false);		);	</action>		<action name="foundwaldo_close">		tween(layer[foundwaldo].alpha,0.0,0.4);				tween(layer[foundwaldo_back].bgalpha,0.0,0.4);		delayedcall(0.4,			set(layer[foundwaldo].visible,false);			set(layer[foundwaldo_back].visible,false);		);	</action>		<action name="congrats_close">		tween(layer[congrats].alpha,0.0,0.4);				tween(layer[congrats_back].bgalpha,0.0,0.4);		delayedcall(0.4,			set(layer[congrats].visible,false);			set(layer[congrats_back].visible,false);		);	</action>		<action name="what_does_waldo_do">		if(hotspot[waldo].sizestatus == 1,			copy(s_val,hotspot[waldo].scale);			add(s_val,0.3);			tween(hotspot[waldo].scale,get(s_val),1.0);			set(hotspot[waldo].sizestatus,2);		,			copy(s_val,hotspot[waldo].scale);			sub(s_val,0.3);			tween(hotspot[waldo].scale,get(s_val),1.0);			set(hotspot[waldo].sizestatus,1);		);		delayedcall(wdwd, 1.01,			what_does_waldo_do();		);	</action>	<!--	    For an alternative skin design either change the <skin_settings> values 	    from above or optionally include one of the predefined designs from below.	    Either by removing the 'xml-if-check' from the particular <include> element	    or by adding e.g. initvar:{design:'flat_light'} to the embedpano() call in	    the html file:	-->	<include url="skin/vtourskin_design_glass.xml"       if="design === 'glass'"       />	<include url="skin/vtourskin_design_flat.xml"        if="design === 'flat'"        />	<include url="skin/vtourskin_design_flat_light.xml"  if="design === 'flat_light'"  />	<include url="skin/vtourskin_design_ultra_light.xml" if="design === 'ultra_light'" />	<include url="skin/vtourskin_design_117.xml"         if="design === '117'"         />	<!-- startup action - load the first pano/scene -->	<action name="startup" autorun="onstart">		set(pin_num,0);		if(realtor === null, set(realtor,compass); );		delayedcall(0.6,			create_pins(get(pin_num));			create_here();			set(render,false);			set(howmanywaldos,10);		);		delayedcall(4.0,			pin_status2(get(startscene));			tween(layer[loadingHoVR].alpha,0.0,0.5);			tween(layer[loadingHoVRani].alpha,0.0,0.5);			delayedcall(0.5,tween(layer[loadingHoVRBG].alpha,0.0,0.3););			delayedcall(0.8,				set(layer[loadingHoVRBG].visible,false);				set(layer[loadingHoVR].visible,false);				set(layer[loadingHoVRani].visible,false);			);		);	</action>			<scene name="scene_122nd_and_Broadway" title="122nd Street and Broadway" onstart="waldo_chooser_scene122nd()" thumburl="panos/122nd_and_Broadway.tiles/thumb.jpg" lat="40.81162028" lng="-73.95980667" map_pin="true" heading="0.0">		<view hlookat="0" vlookat="0" fovtype="MFOV" fov="105" maxpixelzoom="2.0" fovmin="70" fovmax="120" limitview="auto" />		<preview url="panos/122nd_and_Broadway.tiles/preview.jpg" />		<image type="CUBE" multires="true" tilesize="512" prealign="0|120|0">			<level tiledimagewidth="8960" tiledimageheight="8960">				<cube url="panos/122nd_and_Broadway.tiles/%s/l4/%v/l4_%s_%v_%h.jpg" />			</level>			<level tiledimagewidth="4608" tiledimageheight="4608">				<cube url="panos/122nd_and_Broadway.tiles/%s/l3/%v/l3_%s_%v_%h.jpg" />			</level>			<level tiledimagewidth="2304" tiledimageheight="2304">				<cube url="panos/122nd_and_Broadway.tiles/%s/l2/%v/l2_%s_%v_%h.jpg" />			</level>			<level tiledimagewidth="1152" tiledimageheight="1152">				<cube url="panos/122nd_and_Broadway.tiles/%s/l1/%v/l1_%s_%v_%h.jpg" />			</level>		</image>		<!-- place your scene hotspots here -->		<hotspot name="spot1" style="skin_hotspotstyle" ath="-5.274" atv="1.084" linkedscene="scene_77th_st_and_park_av" />		<hotspot name="spot2" style="skin_hotspotstyle" ath="21.959" atv="0.938" linkedscene="scene_66th_st_and_central_park_west" />		<hotspot name="spot3" style="skin_hotspotstyle" ath="31.590" atv="0.861" linkedscene="scene_51st_st_and_12th_av" />				<!-- Waldo Set Up -->			<action name="waldo_chooser_scene122nd">		if(layer[waldo_designator].scene122nd == none,			mul(val,random,6.49);			add(val,1);			roundval(val);			copy(layer[waldo_designator].scene122nd, val);		);		hotspot_creator_scene122nd();		txtadd(layer[foundwaldo_fig].url,'Waldo/','waldo_fig',get(layer[waldo_designator].scene122nd),'.jpg');		txtadd(layer[alreadyfound_fig].url,'Waldo/','waldo_fig',get(layer[waldo_designator].scene122nd),'.jpg');	</action>		<action name="hotspot_creator_scene122nd">		if(hotspot[waldo],		,			addhotspot(waldo);		);		set(hotspot[waldo].keep,false);		set(hotspot[waldo].visible,true);		set(hotspot[waldo].enabled,true);		set(hotspot[waldo].handcursor,false);		set(hotspot[waldo].distorted,true);		set(hotspot[waldo].sizestatus,1);		set(hotspot[waldo].zorder,49);		set(hotspot[waldo].alpha,0.85);		set(hotspot[waldo].edge,bottom);		txtadd(hotspot[waldo].onclick,'set(layer[waldo_designator].scene122ndfound,1);','ifound','waldo','();');		if(layer[waldo_designator].scene122ndfound == 1,			set(hotspot[waldo].found,1);		,			set(hotspot[waldo].found,0);		);				<!-- Individual Waldo Set Up -->					<!-- Waldo 1 -->			if(layer[waldo_designator].scene122nd == 1,				txtadd(hotspot[waldo].url,'Waldo/','Waldo1.png');				set(hotspot[waldo].ath,-72.938);				set(hotspot[waldo].atv,44.326);				set(hotspot[waldo].scale,0.12);			);					<!-- Waldo 2 -->			if(layer[waldo_designator].scene122nd == 2,				txtadd(hotspot[waldo].url,'Waldo/','Waldo2.png');				set(hotspot[waldo].ath,-126.472);				set(hotspot[waldo].atv,22.574);				set(hotspot[waldo].scale,0.10);			);					<!-- Waldo 3 -->			if(layer[waldo_designator].scene122nd == 3,				txtadd(hotspot[waldo].url,'Waldo/','Waldo3.png');				set(hotspot[waldo].ath,165.258);				set(hotspot[waldo].atv,25.322);				set(hotspot[waldo].scale,0.03);				set(hotspot[waldo].edge,bottomright);			);					<!-- Waldo 4 -->			if(layer[waldo_designator].scene122nd == 4,				txtadd(hotspot[waldo].url,'Waldo/','Waldo4.png');				set(hotspot[waldo].ath,126.064);				set(hotspot[waldo].atv,24.793);				set(hotspot[waldo].scale,0.10);			);					<!-- Waldo 5 -->			if(layer[waldo_designator].scene122nd == 5,				txtadd(hotspot[waldo].url,'Waldo/','Waldo5.png');				set(hotspot[waldo].ath,-166.905);				set(hotspot[waldo].atv,21.681);				set(hotspot[waldo].scale,0.09);				set(hotspot[waldo].edge,bottomright);			);					<!-- Waldo 6 -->			if(layer[waldo_designator].scene122nd == 6,				txtadd(hotspot[waldo].url,'Waldo/','Waldo6.png');				set(hotspot[waldo].ath,38.277);				set(hotspot[waldo].atv,22.661);				set(hotspot[waldo].scale,0.11);			);			<!-- Waldo 7 -->			if(layer[waldo_designator].scene122nd == 7,				txtadd(hotspot[waldo].url,'Waldo/','Waldo7.png');				set(hotspot[waldo].ath,6.334);				set(hotspot[waldo].atv,55.963);				set(hotspot[waldo].scale,0.17);			);					<!-- End of Individual Waldo Set Up -->				set(hotspot[waldo].keep,false);		mul(hotspot[waldo].scale,layer[waldo_designator].difficulty);		txtadd(hotspot[waldo].onloaded,'if(found == 1,','what_does_waldo_do();',');');		updatewaldoscenestatus();			</action>	</scene>		<scene name="scene_77th_St_and_Park_Av" title="77th Street and Park Avenue" onstart="waldo_chooser_scene77th()" thumburl="panos/77th_St_and_Park_Av.tiles/thumb.jpg" lat="40.77407750" lng="-73.96133194" map_pin="true" heading="0.0">		<view hlookat="71.529" vlookat="6.111" fovtype="MFOV" fov="105.000" maxpixelzoom="2.0" fovmin="70" fovmax="120" limitview="auto" />		<preview url="panos/77th_St_and_Park_Av.tiles/preview.jpg" />		<image type="CUBE" multires="true" tilesize="512" >			<level tiledimagewidth="7168" tiledimageheight="7168">				<cube url="panos/77th_St_and_Park_Av.tiles/%s/l4/%v/l4_%s_%v_%h.jpg" />			</level>			<level tiledimagewidth="3584" tiledimageheight="3584">				<cube url="panos/77th_St_and_Park_Av.tiles/%s/l3/%v/l3_%s_%v_%h.jpg" />			</level>			<level tiledimagewidth="1792" tiledimageheight="1792">				<cube url="panos/77th_St_and_Park_Av.tiles/%s/l2/%v/l2_%s_%v_%h.jpg" />			</level>			<level tiledimagewidth="1024" tiledimageheight="1024">				<cube url="panos/77th_St_and_Park_Av.tiles/%s/l1/%v/l1_%s_%v_%h.jpg" />			</level>		</image>		<!-- place your scene hotspots here -->		<hotspot name="spot1" style="skin_hotspotstyle" ath="29.025" atv="1.025" linkedscene="scene_30th_st_and_2nd_av" />		<hotspot name="spot2" style="skin_hotspotstyle" ath="74.764" atv="1.040" linkedscene="scene_51st_st_and_12th_av" />		<hotspot name="spot3" style="skin_hotspotstyle" ath="64.818" atv="1.061" linkedscene="scene_45th_st_and_9th_av" />		<hotspot name="spot4" style="skin_hotspotstyle" ath="92.384" atv="1.328" linkedscene="scene_66th_st_and_central_park_west" />		<hotspot name="spot5" style="skin_hotspotstyle" ath="-163.082" atv="1.766" linkedscene="scene_122nd_and_broadway" />				<!-- Waldo Set Up -->			<action name="waldo_chooser_scene77th">		if(layer[waldo_designator].scene77th == none,			mul(val,random,6.49);			add(val,1);			roundval(val);			copy(layer[waldo_designator].scene77th, val);		);		hotspot_creator_scene77th();		txtadd(layer[foundwaldo_fig].url,'Waldo/','waldo_fig',get(layer[waldo_designator].scene77th),'.jpg');		txtadd(layer[alreadyfound_fig].url,'Waldo/','waldo_fig',get(layer[waldo_designator].scene77th),'.jpg');	</action>		<action name="hotspot_creator_scene77th">		if(hotspot[waldo],		,			addhotspot(waldo);		);		set(hotspot[waldo].keep,false);		set(hotspot[waldo].visible,true);		set(hotspot[waldo].enabled,true);		set(hotspot[waldo].handcursor,false);		set(hotspot[waldo].distorted,true);		set(hotspot[waldo].sizestatus,1);		set(hotspot[waldo].zorder,49);		set(hotspot[waldo].alpha,0.85);		txtadd(hotspot[waldo].onclick,'set(layer[waldo_designator].scene77thfound,1);','ifound','waldo','();');		if(layer[waldo_designator].scene77thfound == 1,			set(hotspot[waldo].found,1);		,			set(hotspot[waldo].found,0);		);				<!-- Individual Waldo Set Up -->					<!-- Waldo 1 -->			if(layer[waldo_designator].scene77th == 1,				txtadd(hotspot[waldo].url,'Waldo/','Waldo1.png');				set(hotspot[waldo].ath,158.774);				set(hotspot[waldo].atv,56.441);				set(hotspot[waldo].scale,0.1);			);					<!-- Waldo 2 -->			if(layer[waldo_designator].scene77th == 2,				txtadd(hotspot[waldo].url,'Waldo/','Waldo2.png');				set(hotspot[waldo].ath,105.728);				set(hotspot[waldo].atv,31.817);				set(hotspot[waldo].scale,0.05);			);					<!-- Waldo 3 -->			if(layer[waldo_designator].scene77th == 3,				txtadd(hotspot[waldo].url,'Waldo/','Waldo3.png');				set(hotspot[waldo].ath,-3.903);				set(hotspot[waldo].atv,40.305);				set(hotspot[waldo].scale,.07);				set(hotspot[waldo].edge,bottomright);			);					<!-- Waldo 4 -->			if(layer[waldo_designator].scene77th == 4,				txtadd(hotspot[waldo].url,'Waldo/','Waldo4.png');				set(hotspot[waldo].ath,-81.704);				set(hotspot[waldo].atv,39.488);				set(hotspot[waldo].scale,0.05);			);					<!-- Waldo 5 -->			if(layer[waldo_designator].scene77th == 5,				txtadd(hotspot[waldo].url,'Waldo/','Waldo5.png');				set(hotspot[waldo].ath,-54.011);				set(hotspot[waldo].atv,36.540);				set(hotspot[waldo].scale,0.08);				set(hotspot[waldo].edge,bottomright);			);					<!-- Waldo 6 -->			if(layer[waldo_designator].scene77th == 6,				txtadd(hotspot[waldo].url,'Waldo/','Waldo6.png');				set(hotspot[waldo].ath,-134.998);				set(hotspot[waldo].atv,34.267);				set(hotspot[waldo].scale,0.07);			);			<!-- Waldo 7 -->			if(layer[waldo_designator].scene77th == 7,				txtadd(hotspot[waldo].url,'Waldo/','Waldo7.png');				set(hotspot[waldo].ath,-133.924);				set(hotspot[waldo].atv,71.834);				set(hotspot[waldo].scale,0.16);			);					<!-- End of Individual Waldo Set Up -->				set(hotspot[waldo].keep,false);		mul(hotspot[waldo].scale,layer[waldo_designator].difficulty);		txtadd(hotspot[waldo].onloaded,'if(found == 1,','what_does_waldo_do();',');');		updatewaldoscenestatus();	</action>	</scene>		<scene name="scene_66th_St_and_Central_Park_West" title="66th Street and Central Park West" onstart="waldo_chooser_scene66th();" thumburl="panos/66th_St_and_Central_Park_West.tiles/thumb.jpg" lat="40.77261389" lng="-73.98035056" map_pin="true" heading="0.0">		<view hlookat="0" vlookat="0" fovtype="MFOV" fov="105" maxpixelzoom="2.0" fovmin="70" fovmax="120" limitview="auto" />		<preview url="panos/66th_St_and_Central_Park_West.tiles/preview.jpg" />		<image type="CUBE" multires="true" tilesize="512" prealign="0|-40|0">			<level tiledimagewidth="8960" tiledimageheight="8960">				<cube url="panos/66th_St_and_Central_Park_West.tiles/%s/l4/%v/l4_%s_%v_%h.jpg" />			</level>			<level tiledimagewidth="4608" tiledimageheight="4608">				<cube url="panos/66th_St_and_Central_Park_West.tiles/%s/l3/%v/l3_%s_%v_%h.jpg" />			</level>			<level tiledimagewidth="2304" tiledimageheight="2304">				<cube url="panos/66th_St_and_Central_Park_West.tiles/%s/l2/%v/l2_%s_%v_%h.jpg" />			</level>			<level tiledimagewidth="1152" tiledimageheight="1152">				<cube url="panos/66th_St_and_Central_Park_West.tiles/%s/l1/%v/l1_%s_%v_%h.jpg" />			</level>		</image>		<!-- place your scene hotspots here -->		<hotspot name="spot1" style="skin_hotspotstyle" ath="-85.038" atv="1.020" linkedscene="scene_77th_st_and_park_av" />		<hotspot name="spot2" style="skin_hotspotstyle" ath="-7.381" atv="-1.136" linkedscene="scene_30th_st_and_2nd_av" />		<hotspot name="spot3" style="skin_hotspotstyle" ath="62.481" atv="0.927" linkedscene="scene_51st_st_and_12th_av" />		<hotspot name="spot4" style="skin_hotspotstyle" ath="26.502" atv="-1.705" linkedscene="scene_45th_st_and_9th_av" />		<hotspot name="spot5" style="skin_hotspotstyle" ath="-146.165" atv="1.284" linkedscene="scene_122nd_and_broadway" />				<!-- Waldo Set Up -->			<action name="waldo_chooser_scene66th">		if(layer[waldo_designator].scene66th == none,			mul(val,random,6.49);			add(val,1);			roundval(val);			copy(layer[waldo_designator].scene66th, val);		);		hotspot_creator_scene66th();		txtadd(layer[foundwaldo_fig].url,'Waldo/','waldo_fig',get(layer[waldo_designator].scene66th),'.jpg');		txtadd(layer[alreadyfound_fig].url,'Waldo/','waldo_fig',get(layer[waldo_designator].scene66th),'.jpg');	</action>		<action name="hotspot_creator_scene66th">		if(hotspot[waldo],		,			addhotspot(waldo);		);		set(hotspot[waldo].keep,false);		set(hotspot[waldo].visible,true);		set(hotspot[waldo].enabled,true);		set(hotspot[waldo].handcursor,false);		set(hotspot[waldo].distorted,true);		set(hotspot[waldo].sizestatus,1);		set(hotspot[waldo].zorder,49);		set(hotspot[waldo].alpha,0.85);		set(hotspot[waldo].edge,bottom);		txtadd(hotspot[waldo].onclick,'set(layer[waldo_designator].scene66thfound,1);','ifound','waldo','();');		if(layer[waldo_designator].scene66thfound == 1,			set(hotspot[waldo].found,1);		,			set(hotspot[waldo].found,0);		);				<!-- Individual Waldo Set Up -->					<!-- Waldo 1 -->			if(layer[waldo_designator].scene66th == 1,				txtadd(hotspot[waldo].url,'Waldo/','Waldo1.png');				set(hotspot[waldo].ath,117.622);				set(hotspot[waldo].atv,73.251);				set(hotspot[waldo].scale,0.08);			);					<!-- Waldo 2 -->			if(layer[waldo_designator].scene66th == 2,				txtadd(hotspot[waldo].url,'Waldo/','Waldo2.png');				set(hotspot[waldo].ath,-148.165);				set(hotspot[waldo].atv,44.880);				set(hotspot[waldo].scale,0.12);			);					<!-- Waldo 3 -->			if(layer[waldo_designator].scene66th == 3,				txtadd(hotspot[waldo].url,'Waldo/','Waldo3.png');				set(hotspot[waldo].ath,83.411);				set(hotspot[waldo].atv,24.797);				set(hotspot[waldo].scale,0.11);				set(hotspot[waldo].edge,bottomright);			);					<!-- Waldo 4 -->			if(layer[waldo_designator].scene66th == 4,				txtadd(hotspot[waldo].url,'Waldo/','Waldo4.png');				set(hotspot[waldo].ath,156.547);				set(hotspot[waldo].atv,36.357);				set(hotspot[waldo].scale,0.07);			);					<!-- Waldo 5 -->			if(layer[waldo_designator].scene66th == 5,				txtadd(hotspot[waldo].url,'Waldo/','Waldo5.png');				set(hotspot[waldo].ath,-84.181);				set(hotspot[waldo].atv,36.819);				set(hotspot[waldo].scale,0.10);				set(hotspot[waldo].edge,bottomright);			);					<!-- Waldo 6 -->			if(layer[waldo_designator].scene66th == 6,				txtadd(hotspot[waldo].url,'Waldo/','Waldo6.png');				set(hotspot[waldo].ath,-129.838);				set(hotspot[waldo].atv,33.248);				set(hotspot[waldo].scale,0.08);			);			<!-- Waldo 7 -->			if(layer[waldo_designator].scene66th == 7,				txtadd(hotspot[waldo].url,'Waldo/','Waldo7.png');				set(hotspot[waldo].ath,32.013);				set(hotspot[waldo].atv,62.865);				set(hotspot[waldo].scale,0.11);			);					<!-- End of Individual Waldo Set Up -->				set(hotspot[waldo].keep,false);		mul(hotspot[waldo].scale,layer[waldo_designator].difficulty);		txtadd(hotspot[waldo].onloaded,'if(found == 1,','what_does_waldo_do();',');');		updatewaldoscenestatus();	</action>	</scene>		<scene name="scene_51st_St_and_12th_Av" title="51st Street and 12th Avenue" onstart="waldo_chooser_scene51st();" thumburl="panos/51st_St_and_12th_Av.tiles/thumb.jpg" lat="40.76712139" lng="-73.99625111" map_pin="true" heading="0.0">		<view hlookat="0" vlookat="0" fovtype="MFOV" fov="105" maxpixelzoom="2.0" fovmin="70" fovmax="120" limitview="auto" />		<preview url="panos/51st_St_and_12th_Av.tiles/preview.jpg" />		<image type="CUBE" multires="true" tilesize="512" prealign="0|-40|0">			<level tiledimagewidth="8960" tiledimageheight="8960">				<cube url="panos/51st_St_and_12th_Av.tiles/%s/l4/%v/l4_%s_%v_%h.jpg" />			</level>			<level tiledimagewidth="4608" tiledimageheight="4608">				<cube url="panos/51st_St_and_12th_Av.tiles/%s/l3/%v/l3_%s_%v_%h.jpg" />			</level>			<level tiledimagewidth="2304" tiledimageheight="2304">				<cube url="panos/51st_St_and_12th_Av.tiles/%s/l2/%v/l2_%s_%v_%h.jpg" />			</level>			<level tiledimagewidth="1152" tiledimageheight="1152">				<cube url="panos/51st_St_and_12th_Av.tiles/%s/l1/%v/l1_%s_%v_%h.jpg" />			</level>		</image>		<!-- place your scene hotspots here -->		<hotspot name="spot1" style="skin_hotspotstyle" ath="-101.496" atv="0.899" linkedscene="scene_77th_st_and_park_av" />		<hotspot name="spot2" style="skin_hotspotstyle" ath="18.240" atv="-0.486" linkedscene="scene_dutch_st_and_fulton_st" />		<hotspot name="spot3" style="skin_hotspotstyle" ath="31.461" atv="0.381" linkedscene="scene_morton_st_and_greenwich_st" />		<hotspot name="spot4" style="skin_hotspotstyle" ath="-112.722" atv="1.174" linkedscene="scene_66th_st_and_central_park_west" />		<hotspot name="spot5" style="skin_hotspotstyle" ath="-133.271" atv="1.449" linkedscene="scene_122nd_and_broadway" />				<!-- Waldo Set Up -->			<action name="waldo_chooser_scene51st">		if(layer[waldo_designator].scene51st == none,			mul(val,random,6.49);			add(val,1);			roundval(val);			copy(layer[waldo_designator].scene51st, val);		);		hotspot_creator_scene51st();		txtadd(layer[foundwaldo_fig].url,'Waldo/','waldo_fig',get(layer[waldo_designator].scene51st),'.jpg');		txtadd(layer[alreadyfound_fig].url,'Waldo/','waldo_fig',get(layer[waldo_designator].scene51st),'.jpg');	</action>		<action name="hotspot_creator_scene51st">		if(hotspot[waldo],		,			addhotspot(waldo);		);		set(hotspot[waldo].keep,false);		set(hotspot[waldo].visible,true);		set(hotspot[waldo].enabled,true);		set(hotspot[waldo].handcursor,false);		set(hotspot[waldo].distorted,true);		set(hotspot[waldo].sizestatus,1);		set(hotspot[waldo].zorder,49);		set(hotspot[waldo].alpha,0.85);		set(hotspot[waldo].edge,bottom);		txtadd(hotspot[waldo].onclick,'set(layer[waldo_designator].scene51stfound,1);','ifound','waldo','();');		if(layer[waldo_designator].scene51stfound == 1,			set(hotspot[waldo].found,1);		,			set(hotspot[waldo].found,0);		);				<!-- Individual Waldo Set Up -->					<!-- Waldo 1 -->			if(layer[waldo_designator].scene51st == 1,				txtadd(hotspot[waldo].url,'Waldo/','Waldo1.png');				set(hotspot[waldo].ath,-60.998);				set(hotspot[waldo].atv,50.517);				set(hotspot[waldo].scale,0.07);			);					<!-- Waldo 2 -->			if(layer[waldo_designator].scene51st == 2,				txtadd(hotspot[waldo].url,'Waldo/','Waldo2.png');				set(hotspot[waldo].ath,-105.499);				set(hotspot[waldo].atv,35.77);				set(hotspot[waldo].scale,0.056);			);					<!-- Waldo 3 -->			if(layer[waldo_designator].scene51st == 3,				txtadd(hotspot[waldo].url,'Waldo/','Waldo3.png');				set(hotspot[waldo].ath,-77.198);				set(hotspot[waldo].atv,24.674);				set(hotspot[waldo].scale,0.055);				set(hotspot[waldo].edge,bottomright);			);					<!-- Waldo 4 -->			if(layer[waldo_designator].scene51st == 4,				txtadd(hotspot[waldo].url,'Waldo/','Waldo4.png');				set(hotspot[waldo].ath,100.515);				set(hotspot[waldo].atv,49.777);				set(hotspot[waldo].scale,0.074);			);					<!-- Waldo 5 -->			if(layer[waldo_designator].scene51st == 5,				txtadd(hotspot[waldo].url,'Waldo/','Waldo5.png');				set(hotspot[waldo].ath,-82.441);				set(hotspot[waldo].atv,25.232);				set(hotspot[waldo].scale,0.05);				set(hotspot[waldo].edge,bottomright);			);					<!-- Waldo 6 -->			if(layer[waldo_designator].scene51st == 6,				txtadd(hotspot[waldo].url,'Waldo/','Waldo6.png');				set(hotspot[waldo].ath,12.734);				set(hotspot[waldo].atv,15.927);				set(hotspot[waldo].scale,0.05);			);			<!-- Waldo 7 -->			if(layer[waldo_designator].scene51st == 7,				txtadd(hotspot[waldo].url,'Waldo/','Waldo7.png');				set(hotspot[waldo].ath,-48.360);				set(hotspot[waldo].atv,43.347);				set(hotspot[waldo].scale,0.12);			);					<!-- End of Individual Waldo Set Up -->				set(hotspot[waldo].keep,false);		mul(hotspot[waldo].scale,layer[waldo_designator].difficulty);		txtadd(hotspot[waldo].onloaded,'if(found == 1,','what_does_waldo_do();',');');		updatewaldoscenestatus();	</action>	</scene>		<scene name="scene_Morton_St_and_Greenwich_St" title="Morton St and Greenwich St" onstart="waldo_chooser_sceneMorton();" thumburl="panos/Morton_St_and_Greenwich_St.tiles/thumb.jpg" lat="40.73139833" lng="-74.00798278" map_pin="true" heading="0.0">		<view hlookat="0" vlookat="0" fovtype="MFOV" fov="105" maxpixelzoom="2.0" fovmin="70" fovmax="120" limitview="auto" />		<preview url="panos/Morton_St_and_Greenwich_St.tiles/preview.jpg" />		<image type="CUBE" multires="true" tilesize="512" prealign="0|37|0">			<level tiledimagewidth="8960" tiledimageheight="8960">				<cube url="panos/Morton_St_and_Greenwich_St.tiles/%s/l4/%v/l4_%s_%v_%h.jpg" />			</level>			<level tiledimagewidth="4608" tiledimageheight="4608">				<cube url="panos/Morton_St_and_Greenwich_St.tiles/%s/l3/%v/l3_%s_%v_%h.jpg" />			</level>			<level tiledimagewidth="2304" tiledimageheight="2304">				<cube url="panos/Morton_St_and_Greenwich_St.tiles/%s/l2/%v/l2_%s_%v_%h.jpg" />			</level>			<level tiledimagewidth="1152" tiledimageheight="1152">				<cube url="panos/Morton_St_and_Greenwich_St.tiles/%s/l1/%v/l1_%s_%v_%h.jpg" />			</level>		</image>		<!-- place your scene hotspots here -->		<hotspot name="spot1" style="skin_hotspotstyle" ath="-130.790" atv="1.220" linkedscene="scene_45th_st_and_9th_av" />		<hotspot name="spot2" style="skin_hotspotstyle" ath="-79.874" atv="1.308" linkedscene="scene_30th_st_and_2nd_av" />		<hotspot name="spot3" style="skin_hotspotstyle" ath="32.622" atv="-2.509" linkedscene="scene_dutch_st_and_fulton_st" />				<!-- Waldo Set Up -->			<action name="waldo_chooser_sceneMorton">		if(layer[waldo_designator].sceneMorton == none,			mul(val,random,6.49);			add(val,1);			roundval(val);			copy(layer[waldo_designator].sceneMorton, val);		);		hotspot_creator_sceneMorton();		txtadd(layer[foundwaldo_fig].url,'Waldo/','waldo_fig',get(layer[waldo_designator].sceneMorton),'.jpg');		txtadd(layer[alreadyfound_fig].url,'Waldo/','waldo_fig',get(layer[waldo_designator].sceneMorton),'.jpg');	</action>		<action name="hotspot_creator_sceneMorton">		if(hotspot[waldo],		,			addhotspot(waldo);		);		set(hotspot[waldo].keep,false);		set(hotspot[waldo].visible,true);		set(hotspot[waldo].enabled,true);		set(hotspot[waldo].handcursor,false);		set(hotspot[waldo].distorted,true);		set(hotspot[waldo].sizestatus,1);		set(hotspot[waldo].zorder,49);		set(hotspot[waldo].alpha,0.85);		set(hotspot[waldo].edge,bottom);		txtadd(hotspot[waldo].onclick,'set(layer[waldo_designator].sceneMortonfound,1);','ifound','waldo','();');		if(layer[waldo_designator].sceneMortonfound == 1,			set(hotspot[waldo].found,1);		,			set(hotspot[waldo].found,0);		);				<!-- Individual Waldo Set Up -->					<!-- Waldo 1 -->			if(layer[waldo_designator].sceneMorton == 1,				txtadd(hotspot[waldo].url,'Waldo/','Waldo1.png');				set(hotspot[waldo].ath,-18.605);				set(hotspot[waldo].atv,40.587);				set(hotspot[waldo].scale,0.14);			);					<!-- Waldo 2 -->			if(layer[waldo_designator].sceneMorton == 2,				txtadd(hotspot[waldo].url,'Waldo/','Waldo2.png');				set(hotspot[waldo].ath,13.309);				set(hotspot[waldo].atv,29.576);				set(hotspot[waldo].scale,0.077);			);					<!-- Waldo 3 -->			if(layer[waldo_designator].sceneMorton == 3,				txtadd(hotspot[waldo].url,'Waldo/','Waldo3.png');				set(hotspot[waldo].ath,-155.0);				set(hotspot[waldo].atv,29.748);				set(hotspot[waldo].scale,0.11);				set(hotspot[waldo].edge,bottomright);			);					<!-- Waldo 4 -->			if(layer[waldo_designator].sceneMorton == 4,				txtadd(hotspot[waldo].url,'Waldo/','Waldo4.png');				set(hotspot[waldo].ath,78.895);				set(hotspot[waldo].atv,45.245);				set(hotspot[waldo].scale,0.105);			);					<!-- Waldo 5 -->			if(layer[waldo_designator].sceneMorton == 5,				txtadd(hotspot[waldo].url,'Waldo/','Waldo5.png');				set(hotspot[waldo].ath,116.569);				set(hotspot[waldo].atv,47.959);				set(hotspot[waldo].scale,0.095);				set(hotspot[waldo].edge,bottomright);			);					<!-- Waldo 6 -->			if(layer[waldo_designator].sceneMorton == 6,				txtadd(hotspot[waldo].url,'Waldo/','Waldo6.png');				set(hotspot[waldo].ath,-117.199);				set(hotspot[waldo].atv,47.521);				set(hotspot[waldo].scale,0.11);			);			<!-- Waldo 7 -->			if(layer[waldo_designator].sceneMorton == 7,				txtadd(hotspot[waldo].url,'Waldo/','Waldo7.png');				set(hotspot[waldo].ath,105.496);				set(hotspot[waldo].atv,62.807);				set(hotspot[waldo].scale,0.20);			);					<!-- End of Individual Waldo Set Up -->				set(hotspot[waldo].keep,false);		mul(hotspot[waldo].scale,layer[waldo_designator].difficulty);		txtadd(hotspot[waldo].onloaded,'if(found == 1,','what_does_waldo_do();',');');		updatewaldoscenestatus();			</action>	</scene>		<scene name="scene_John_St_and_Gold_St" title="John Street and Gold Street" onstart="waldo_chooser_sceneJohn();" thumburl="panos/John_St_and_Gold_St.tiles/thumb.jpg" lat="40.70824028" lng="-74.00667083" map_pin="true" heading="0.0">		<view hlookat="0" vlookat="0" fovtype="MFOV" fov="105" maxpixelzoom="2.0" fovmin="70" fovmax="120" limitview="auto" />		<preview url="panos/John_St_and_Gold_St.tiles/preview.jpg" />		<image type="CUBE" multires="true" tilesize="512" prealign="0|166|0">			<level tiledimagewidth="8960" tiledimageheight="8960">				<cube url="panos/John_St_and_Gold_St.tiles/%s/l4/%v/l4_%s_%v_%h.jpg" />			</level>			<level tiledimagewidth="4608" tiledimageheight="4608">				<cube url="panos/John_St_and_Gold_St.tiles/%s/l3/%v/l3_%s_%v_%h.jpg" />			</level>			<level tiledimagewidth="2304" tiledimageheight="2304">				<cube url="panos/John_St_and_Gold_St.tiles/%s/l2/%v/l2_%s_%v_%h.jpg" />			</level>			<level tiledimagewidth="1152" tiledimageheight="1152">				<cube url="panos/John_St_and_Gold_St.tiles/%s/l1/%v/l1_%s_%v_%h.jpg" />			</level>		</image>		<!-- place your scene hotspots here -->		<hotspot name="spot1" style="skin_hotspotstyle" ath="-137.529" atv="2.141" linkedscene="scene_30th_st_and_2nd_av" />		<hotspot name="spot4" style="skin_hotspotstyle" ath="167.292" atv="9.579" linkedscene="scene_dutch_st_and_fulton_st" />		<hotspot name="spot5" style="skin_hotspotstyle" ath="-162.980" atv="2.090" linkedscene="scene_45th_St_and_9th_Av" />		<hotspot name="spot6" style="skin_hotspotstyle" ath="-173.993" atv="3.856" linkedscene="scene_morton_st_and_greenwich_st" />		<hotspot name="spot7" style="skin_hotspotstyle" ath="-38.289" atv="1.406" linkedscene="scene_fleet_st_and_dekalb_av" />				<!-- Waldo Set Up -->			<action name="waldo_chooser_sceneJohn">		if(layer[waldo_designator].sceneJohn == none,			mul(val,random,6.49);			add(val,1);			roundval(val);			copy(layer[waldo_designator].sceneJohn, val);		);		hotspot_creator_sceneJohn();		txtadd(layer[foundwaldo_fig].url,'Waldo/','waldo_fig',get(layer[waldo_designator].sceneJohn),'.jpg');		txtadd(layer[alreadyfound_fig].url,'Waldo/','waldo_fig',get(layer[waldo_designator].sceneJohn),'.jpg');	</action>		<action name="hotspot_creator_sceneJohn">		if(hotspot[waldo],		,			addhotspot(waldo);		);		set(hotspot[waldo].keep,false);		set(hotspot[waldo].visible,true);		set(hotspot[waldo].enabled,true);		set(hotspot[waldo].handcursor,false);		set(hotspot[waldo].distorted,true);		set(hotspot[waldo].sizestatus,1);		set(hotspot[waldo].zorder,49);		set(hotspot[waldo].alpha,0.85);		set(hotspot[waldo].edge,bottom);		txtadd(hotspot[waldo].onclick,'set(layer[waldo_designator].sceneJohnfound,1);','ifound','waldo','();');		if(layer[waldo_designator].sceneJohnfound == 1,			set(hotspot[waldo].found,1);		,			set(hotspot[waldo].found,0);		);				<!-- Individual Waldo Set Up -->					<!-- Waldo 1 -->			if(layer[waldo_designator].sceneJohn == 1,				txtadd(hotspot[waldo].url,'Waldo/','Waldo1.png');				set(hotspot[waldo].ath,-91.915);				set(hotspot[waldo].atv,68.817);				set(hotspot[waldo].scale,0.09);			);					<!-- Waldo 2 -->			if(layer[waldo_designator].sceneJohn == 2,				txtadd(hotspot[waldo].url,'Waldo/','Waldo2.png');				set(hotspot[waldo].ath,-159.100);				set(hotspot[waldo].atv,52.921);				set(hotspot[waldo].scale,0.12);			);					<!-- Waldo 3 -->			if(layer[waldo_designator].sceneJohn == 3,				txtadd(hotspot[waldo].url,'Waldo/','Waldo3.png');				set(hotspot[waldo].ath,-32.305);				set(hotspot[waldo].atv,47.310);				set(hotspot[waldo].scale,0.14);				set(hotspot[waldo].edge,bottomright);			);					<!-- Waldo 4 -->			if(layer[waldo_designator].sceneJohn == 4,				txtadd(hotspot[waldo].url,'Waldo/','Waldo4.png');				set(hotspot[waldo].ath,17.860);				set(hotspot[waldo].atv,39.756);				set(hotspot[waldo].scale,0.15);			);					<!-- Waldo 5 -->			if(layer[waldo_designator].sceneJohn == 5,				txtadd(hotspot[waldo].url,'Waldo/','Waldo5.png');				set(hotspot[waldo].ath,60.685);				set(hotspot[waldo].atv,24.710);				set(hotspot[waldo].scale,0.10);				set(hotspot[waldo].edge,bottomright);			);					<!-- Waldo 6 -->			if(layer[waldo_designator].sceneJohn == 6,				txtadd(hotspot[waldo].url,'Waldo/','Waldo6.png');				set(hotspot[waldo].ath,43.516);				set(hotspot[waldo].atv,33.628);				set(hotspot[waldo].scale,0.07);			);			<!-- Waldo 7 -->			if(layer[waldo_designator].sceneJohn == 7,				txtadd(hotspot[waldo].url,'Waldo/','Waldo7.png');				set(hotspot[waldo].ath,95.624);				set(hotspot[waldo].atv,70.040);				set(hotspot[waldo].scale,0.17);			);					<!-- End of Individual Waldo Set Up -->				set(hotspot[waldo].keep,false);		mul(hotspot[waldo].scale,layer[waldo_designator].difficulty);		txtadd(hotspot[waldo].onloaded,'if(found == 1,','what_does_waldo_do();',');');		updatewaldoscenestatus();			</action>			</scene>		<scene name="scene_Dutch_St_and_Fulton_St" title="Dutch Street and Fulton Street" onstart="" thumburl="panos/Dutch_St_and_Fulton_St.tiles/thumb.jpg" lat="40.70981361" lng="-74.00739250" map_pin="true" heading="0.0">		<view hlookat="0" vlookat="0" fovtype="MFOV" fov="105" maxpixelzoom="2.0" fovmin="70" fovmax="120" limitview="auto" />		<preview url="panos/Dutch_St_and_Fulton_St.tiles/preview.jpg" />		<image type="CUBE" multires="true" tilesize="512" prealign="0|102|0">			<level tiledimagewidth="8960" tiledimageheight="8960">				<cube url="panos/Dutch_St_and_Fulton_St.tiles/%s/l4/%v/l4_%s_%v_%h.jpg" />			</level>			<level tiledimagewidth="4608" tiledimageheight="4608">				<cube url="panos/Dutch_St_and_Fulton_St.tiles/%s/l3/%v/l3_%s_%v_%h.jpg" />			</level>			<level tiledimagewidth="2304" tiledimageheight="2304">				<cube url="panos/Dutch_St_and_Fulton_St.tiles/%s/l2/%v/l2_%s_%v_%h.jpg" />			</level>			<level tiledimagewidth="1152" tiledimageheight="1152">				<cube url="panos/Dutch_St_and_Fulton_St.tiles/%s/l1/%v/l1_%s_%v_%h.jpg" />			</level>		</image>		<!-- place your scene hotspots here -->		<hotspot name="spot1" style="skin_hotspotstyle" ath="-10.580" atv="20.614" linkedscene="scene_john_st_and_gold_st" />		<hotspot name="spot3" style="skin_hotspotstyle" ath="-137.145" atv="2.750" linkedscene="scene_30th_st_and_2nd_av" />		<hotspot name="spot4" style="skin_hotspotstyle" ath="-146.550" atv="0.892" linkedscene="scene_77th_st_and_park_av" />		<hotspot name="spot5" style="skin_hotspotstyle" ath="-160.912" atv="1.530" linkedscene="scene_45th_St_and_9th_Av" />		<hotspot name="spot6" style="skin_hotspotstyle" ath="-173.376" atv="3.825" linkedscene="scene_morton_st_and_greenwich_st" />		<hotspot name="spot7" style="skin_hotspotstyle" ath="-38.076" atv="2.474" linkedscene="scene_fleet_st_and_dekalb_av" />				<!-- Waldo Set Up -->			<hotspot name="waldo"		url="Waldo\Waldo7.png" 		visible="true"		keep="false"		alpha="0.85"		scale="0.17"		edge="bottom"		zorder="71"		enabled="true"		found="0"		capture="false"		handcursor="false"		distorted="true"		ath="95.624" atv="70.040"	/>			<action name="waldo_chooser_sceneDutch">		if(layer[waldo_designator].sceneJohn == none,			mul(val,random,6.49);			add(val,1);			roundval(val);			copy(layer[waldo_designator].sceneJohn, val);		);		hotspot_creator_sceneDutch();		txtadd(layer[foundwaldo_fig].url,'Waldo/','waldo_fig',get(layer[waldo_designator].sceneJohn),'.jpg');		txtadd(layer[alreadyfound_fig].url,'Waldo/','waldo_fig',get(layer[waldo_designator].sceneJohn),'.jpg');	</action>		<action name="hotspot_creator_sceneDutch">		if(hotspot[waldo],		,			addhotspot(waldo);		);		set(hotspot[waldo].keep,false);		set(hotspot[waldo].visible,true);		set(hotspot[waldo].enabled,true);		set(hotspot[waldo].handcursor,false);		set(hotspot[waldo].distorted,true);		set(hotspot[waldo].sizestatus,1);		set(hotspot[waldo].zorder,49);		set(hotspot[waldo].alpha,0.85);		set(hotspot[waldo].edge,bottom);		txtadd(hotspot[waldo].onclick,'set(layer[waldo_designator].sceneJohnfound,1);','ifound','waldo','();');		if(layer[waldo_designator].sceneJohnfound == 1,			set(hotspot[waldo].found,1);		,			set(hotspot[waldo].found,0);		);				<!-- Individual Waldo Set Up -->					<!-- Waldo 1 -->			if(layer[waldo_designator].sceneJohn == 1,				txtadd(hotspot[waldo].url,'Waldo/','Waldo1.png');				set(hotspot[waldo].ath,-91.915);				set(hotspot[waldo].atv,68.817);				set(hotspot[waldo].scale,0.09);			);					<!-- Waldo 2 -->			if(layer[waldo_designator].sceneJohn == 2,				txtadd(hotspot[waldo].url,'Waldo/','Waldo2.png');				set(hotspot[waldo].ath,-159.100);				set(hotspot[waldo].atv,52.921);				set(hotspot[waldo].scale,0.12);			);					<!-- Waldo 3 -->			if(layer[waldo_designator].sceneJohn == 3,				txtadd(hotspot[waldo].url,'Waldo/','Waldo3.png');				set(hotspot[waldo].ath,-32.305);				set(hotspot[waldo].atv,47.310);				set(hotspot[waldo].scale,0.14);				set(hotspot[waldo].edge,bottomright);			);					<!-- Waldo 4 -->			if(layer[waldo_designator].sceneJohn == 4,				txtadd(hotspot[waldo].url,'Waldo/','Waldo4.png');				set(hotspot[waldo].ath,17.860);				set(hotspot[waldo].atv,39.756);				set(hotspot[waldo].scale,0.15);			);					<!-- Waldo 5 -->			if(layer[waldo_designator].sceneJohn == 5,				txtadd(hotspot[waldo].url,'Waldo/','Waldo5.png');				set(hotspot[waldo].ath,60.685);				set(hotspot[waldo].atv,24.710);				set(hotspot[waldo].scale,0.10);				set(hotspot[waldo].edge,bottomright);			);					<!-- Waldo 6 -->			if(layer[waldo_designator].sceneJohn == 6,				txtadd(hotspot[waldo].url,'Waldo/','Waldo6.png');				set(hotspot[waldo].ath,43.516);				set(hotspot[waldo].atv,33.628);				set(hotspot[waldo].scale,0.07);			);			<!-- Waldo 7 -->			if(layer[waldo_designator].sceneJohn == 7,				txtadd(hotspot[waldo].url,'Waldo/','Waldo7.png');				set(hotspot[waldo].ath,95.624);				set(hotspot[waldo].atv,70.040);				set(hotspot[waldo].scale,0.17);			);					<!-- End of Individual Waldo Set Up -->				set(hotspot[waldo].keep,false);		mul(hotspot[waldo].scale,layer[waldo_designator].difficulty);		txtadd(hotspot[waldo].onloaded,'if(found == 1,','what_does_waldo_do();',');');		updatewaldoscenestatus();			</action>	</scene>		<scene name="scene_N_14th_St_and_Wythe_Ave" title="North 14th Street and Wythe Avenue (L)" onstart="" thumburl="panos/N_14th_St_and_Wythe_Ave.tiles/thumb.jpg" lat="40.72333444" lng="-73.95637222" map_pin="true" heading="0.0">		<view hlookat="130" vlookat="15" fovtype="MFOV" fov="105" maxpixelzoom="2.0" fovmin="70" fovmax="120" limitview="auto" />		<preview url="panos/N_14th_St_and_Wythe_Ave.tiles/preview.jpg" />		<image type="CUBE" multires="true" tilesize="512" prealign="0|-30|0">			<level tiledimagewidth="20736" tiledimageheight="20736">				<cube url="panos/N_14th_St_and_Wythe_Ave.tiles/%s/l6/%v/l6_%s_%v_%h.jpg" />			</level>			<level tiledimagewidth="10368" tiledimageheight="10368">				<cube url="panos/N_14th_St_and_Wythe_Ave.tiles/%s/l5/%v/l5_%s_%v_%h.jpg" />			</level>			<level tiledimagewidth="5184" tiledimageheight="5184">				<cube url="panos/N_14th_St_and_Wythe_Ave.tiles/%s/l4/%v/l4_%s_%v_%h.jpg" />			</level>			<level tiledimagewidth="2624" tiledimageheight="2624">				<cube url="panos/N_14th_St_and_Wythe_Ave.tiles/%s/l3/%v/l3_%s_%v_%h.jpg" />			</level>			<level tiledimagewidth="1280" tiledimageheight="1280">				<cube url="panos/N_14th_St_and_Wythe_Ave.tiles/%s/l2/%v/l2_%s_%v_%h.jpg" />			</level>			<level tiledimagewidth="640" tiledimageheight="640">				<cube url="panos/N_14th_St_and_Wythe_Ave.tiles/%s/l1/%v/l1_%s_%v_%h.jpg" />			</level>		</image>		<!-- place your scene hotspots here -->		<hotspot name="spot3" style="skin_hotspotstyle" ath="100.572" atv="-1.523" linkedscene="scene_john_st_and_gold_st" />		<hotspot name="spot4" style="skin_hotspotstyle" ath="164.519" atv="-0.065" linkedscene="scene_30th_st_and_2nd_av" />		<hotspot name="spot5" style="skin_hotspotstyle" ath="-166.238" atv="-0.657" linkedscene="scene_77th_st_and_park_av" />	</scene>		<scene name="scene_Fleet_St_and_Dekalb_Av" title="Fleet Street and Dekalb Avenue" onstart="" thumburl="panos/Fleet_St_and_Dekalb_Av.tiles/thumb.jpg" lat="40.69048694" lng="-73.98225833" map_pin="true" heading="0.0">		<view hlookat="0" vlookat="0" fovtype="MFOV" fov="105" maxpixelzoom="2.0" fovmin="70" fovmax="120" limitview="auto" />		<preview url="panos/Fleet_St_and_Dekalb_Av.tiles/preview.jpg" />		<image type="CUBE" multires="true" tilesize="512" prealign="0|117|0">			<level tiledimagewidth="8960" tiledimageheight="8960">				<cube url="panos/Fleet_St_and_Dekalb_Av.tiles/%s/l4/%v/l4_%s_%v_%h.jpg" />			</level>			<level tiledimagewidth="4608" tiledimageheight="4608">				<cube url="panos/Fleet_St_and_Dekalb_Av.tiles/%s/l3/%v/l3_%s_%v_%h.jpg" />			</level>			<level tiledimagewidth="2304" tiledimageheight="2304">				<cube url="panos/Fleet_St_and_Dekalb_Av.tiles/%s/l2/%v/l2_%s_%v_%h.jpg" />			</level>			<level tiledimagewidth="1152" tiledimageheight="1152">				<cube url="panos/Fleet_St_and_Dekalb_Av.tiles/%s/l1/%v/l1_%s_%v_%h.jpg" />			</level>		</image>		<!-- place your scene hotspots here -->		<hotspot name="spot3" style="skin_hotspotstyle" ath="-162.311" atv="-0.071" linkedscene="scene_john_st_and_gold_st" />	</scene>	<scene name="scene_East_Drive_and_Grand_Army_Plaza" title="East Drive and Grand Army Plaza" onstart="" thumburl="panos/East_Drive_and_Grand_Army_Plaza.tiles/thumb.jpg" lat="40.67196417" lng="-73.96966250" map_pin="true" heading="0.0">		<view hlookat="0" vlookat="0" fovtype="MFOV" fov="105" maxpixelzoom="2.0" fovmin="70" fovmax="120" limitview="auto" />		<preview url="panos/East_Drive_and_Grand_Army_Plaza.tiles/preview.jpg" />		<image type="CUBE" multires="true" tilesize="512" prealign="0|-10|0">			<level tiledimagewidth="8960" tiledimageheight="8960">				<cube url="panos/East_Drive_and_Grand_Army_Plaza.tiles/%s/l4/%v/l4_%s_%v_%h.jpg" />			</level>			<level tiledimagewidth="4608" tiledimageheight="4608">				<cube url="panos/East_Drive_and_Grand_Army_Plaza.tiles/%s/l3/%v/l3_%s_%v_%h.jpg" />			</level>			<level tiledimagewidth="2304" tiledimageheight="2304">				<cube url="panos/East_Drive_and_Grand_Army_Plaza.tiles/%s/l2/%v/l2_%s_%v_%h.jpg" />			</level>			<level tiledimagewidth="1152" tiledimageheight="1152">				<cube url="panos/East_Drive_and_Grand_Army_Plaza.tiles/%s/l1/%v/l1_%s_%v_%h.jpg" />			</level>		</image>		<!-- place your scene hotspots here -->		<hotspot name="spot1" style="skin_hotspotstyle" ath="-141.162" atv="0.259" linkedscene="scene_fleet_st_and_dekalb_av" />		<hotspot name="spot4" style="skin_hotspotstyle" ath="-111.560" atv="0.845" linkedscene="scene_n_14th_st_and_wythe_ave" />	</scene></krpano>